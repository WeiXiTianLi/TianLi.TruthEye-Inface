# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.get_version.outputs._version }}

    steps:
    - uses: actions/checkout@v3
        
    - name: Clone third party submodule
      run: git submodule update --init --recursive

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Get the Version
      id: get_version
      run: |
        $version = (Get-Content -Path ${{github.workspace}}/build/bin/Release/version -TotalCount 1).Trim()
        echo "dll version: $version"
        echo "_version=$version" >> $env:GITHUB_OUTPUT

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: TianLi.TruthEye.Inface
        path: ${{github.workspace}}/build/bin/Release/
        if-no-files-found: 'warn'

  release:
    # only run in master branch
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: TianLi.TruthEye.Inface
        path: ${{github.workspace}}/Release/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        Version: ${{ needs.build.outputs.version }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.Version }}
        release_name: Release ${{ env.Version }}
        draft: false
        prerelease: false
    - name: Upload a Inface Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/Release/TianLi.TruthEye.Inface.dll
        asset_name: TianLi.TruthEye.Inface.dll
        asset_content_type: application/x-msdownload

        